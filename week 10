using System;
using System.Collections.Generic;

// Base class for different types of goals
public abstract class Goal
{
    public string Name { get; set; }
    protected int points;

    public abstract void MarkComplete();
    public abstract string Progress();
}

// Simple goal with reward
public class SimpleGoal : Goal
{
    public SimpleGoal(string name, int points)
    {
        Name = name;
        this.points = points;
    }

    public override void MarkComplete()
    {
        Console.WriteLine($"Congratulations! You completed the {Name} goal and earned {points} points!");
    }

    public override string Progress()
    {
        return "Completed";
    }
}

// Eternal goal with ongoing rewards
public class EternalGoal : Goal
{
    public EternalGoal(string name, int points)
    {
        Name = name;
        this.points = points;
    }

    public override void MarkComplete()
    {
        Console.WriteLine($"You recorded progress for the {Name} goal and earned {points} points!");
    }

    public override string Progress()
    {
        return "Ongoing";
    }
}

// Checklist goal with rewards and a bonus upon completion
public class ChecklistGoal : Goal
{
    private int totalTimes;
    private int timesCompleted;

    public ChecklistGoal(string name, int points, int totalTimes)
    {
        Name = name;
        this.points = points;
        this.totalTimes = totalTimes;
        timesCompleted = 0;
    }

    public override void MarkComplete()
    {
        timesCompleted++;
        Console.WriteLine($"You completed the {Name} goal {timesCompleted}/{totalTimes} times!");
        if (timesCompleted == totalTimes)
        {
            Console.WriteLine($"Congratulations! You achieved the {Name} goal and earned a bonus of {points} points!");
        }
        else
        {
            Console.WriteLine($"You earned {points} points for completing the {Name} goal.");
        }
    }

    public override string Progress()
    {
        return $"Completed {timesCompleted}/{totalTimes} times";
    }
}

// Class to manage goals and track user's score
public class EternalQuest
{
    private List<Goal> goals = new List<Goal>();
    private int score = 0;

    public void AddGoal(Goal goal)
    {
        goals.Add(goal);
    }

    public void RecordEvent(int goalIndex)
    {
        goals[goalIndex].MarkComplete();
        score += goals[goalIndex].points;
    }

    public void DisplayGoals()
    {
        foreach (Goal goal in goals)
        {
            Console.WriteLine($"{goal.Name} - {goal.Progress()}");
        }
    }

    public void DisplayScore()
    {
        Console.WriteLine($"Your current score is: {score}");
    }
}

class Program
{
    static void Main(string[] args)
    {
        // Create an instance of the EternalQuest program
        EternalQuest quest = new EternalQuest();

        // Add different types of goals
        quest.AddGoal(new SimpleGoal("Run a Marathon", 1000));
        quest.AddGoal(new EternalGoal("Read Scriptures", 100));
        quest.AddGoal(new ChecklistGoal("Attend the Temple", 50, 10));

        // Record events for each goal
        quest.RecordEvent(0); // Run a Marathon
        quest.RecordEvent(1); // Read Scriptures
        quest.RecordEvent(2); // Attend the Temple

        // Display goals and score
        Console.WriteLine("Your goals:");
        quest.DisplayGoals();
        quest.DisplayScore();
    }
}
